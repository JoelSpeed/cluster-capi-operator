apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-cluster-api-aws
  namespace: openshift-cloud-credential-operator
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: "TechPreviewNoUpgrade"
spec:
  serviceAccountNames:
    - cluster-capi-operator
  secretRef:
    name: capa-manager-bootstrap-credentials
    namespace: openshift-cluster-api
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: AWSProviderSpec
    statementEntries:
    - effect: Allow
      action:
      - ec2:CreateTags
      - ec2:DescribeAvailabilityZones
      - ec2:DescribeDhcpOptions
      - ec2:DescribeImages
      - ec2:DescribeInstances
      - ec2:DescribeInternetGateways
      - ec2:DescribeSecurityGroups
      - ec2:DescribeSubnets
      - ec2:DescribeVpcs
      - ec2:DescribeNetworkInterfaces
      - ec2:DescribeNetworkInterfaceAttribute
      - ec2:ModifyNetworkInterfaceAttribute
      - ec2:RunInstances
      - ec2:TerminateInstances
      - elasticloadbalancing:DescribeLoadBalancers
      - elasticloadbalancing:DescribeTargetGroups
      - elasticloadbalancing:DescribeTargetHealth
      - elasticloadbalancing:RegisterInstancesWithLoadBalancer
      - elasticloadbalancing:RegisterTargets
      - elasticloadbalancing:DeregisterTargets
      - iam:PassRole
      - iam:CreateServiceLinkedRole
      resource: "*"
    - effect: Allow
      action:
      - kms:Decrypt
      - kms:Encrypt
      - kms:GenerateDataKey
      - kms:GenerateDataKeyWithoutPlainText
      - kms:DescribeKey
      resource: '*'
    - effect: Allow
      action:
      - kms:RevokeGrant
      - kms:CreateGrant
      - kms:ListGrants
      resource: '*'
      policyCondition:
        "Bool":
          "kms:GrantIsForAWSResource": true
---
apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-cluster-api-azure
  namespace: openshift-cloud-credential-operator
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: "TechPreviewNoUpgrade"
spec:
  secretRef:
    name: capz-manager-bootstrap-credentials
    namespace: openshift-cluster-api
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: AzureProviderSpec
    roleBindings:
    - role: Contributor
---
apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-cluster-api-gcp
  namespace: openshift-cloud-credential-operator
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: "TechPreviewNoUpgrade"
spec:
  serviceAccountNames:
    - cluster-capi-operator
  secretRef:
    name: capg-manager-bootstrap-credentials
    namespace: openshift-cluster-api
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: GCPProviderSpec
    skipServiceCheck: true
    permissions:
    - "compute.addresses.create"
    - "compute.addresses.delete"
    - "compute.addresses.get"
    - "compute.addresses.useInternal"
    - "compute.backendServices.create"
    - "compute.backendServices.delete"
    - "compute.backendServices.get"
    - "compute.backendServices.update"
    - "compute.disks.create"
    - "compute.disks.setLabels"
    - "compute.firewalls.create"
    - "compute.firewalls.delete"
    - "compute.firewalls.get"
    - "compute.firewalls.update"
    - "compute.forwardingRules.create"
    - "compute.forwardingRules.delete"
    - "compute.forwardingRules.get"
    - "compute.healthChecks.create"
    - "compute.healthChecks.delete"
    - "compute.healthChecks.get"
    - "compute.instanceGroups.create"
    - "compute.instanceGroups.delete"
    - "compute.instanceGroups.get"
    - "compute.instanceGroups.list"
    - "compute.instances.create"
    - "compute.instances.delete"
    - "compute.instances.get"
    - "compute.networks.create"
    - "compute.networks.delete"
    - "compute.networks.get"
    - "compute.routers.create"
    - "compute.routers.delete"
    - "compute.routers.get"
    - "compute.subnetworks.create"
    - "compute.subnetworks.delete"
    - "compute.subnetworks.get"
    - "compute.targetTcpProxies.create"
    - "compute.targetTcpProxies.delete"
    - "compute.targetTcpProxies.get"
    - "compute.zones.get"
    - "compute.zones.list"

# includes compute.targetPools.* currently used to add masters to LB in DR scenarios.
# https://cloud.google.com/compute/docs/access/iam#compute.loadBalancerAdmin
---
apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-cluster-api-powervs
  namespace: openshift-cloud-credential-operator
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: "TechPreviewNoUpgrade"
spec:
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: IBMCloudPowerVSProviderSpec
    policies:
      - roles:
          - "crn:v1:bluemix:public:iam::::role:Viewer"
          - "crn:v1:bluemix:public:iam::::serviceRole:Reader"
          - "crn:v1:bluemix:public:iam::::serviceRole:Manager"
        attributes:
          - name: "serviceName"
            value: "power-iaas"
      - roles:
          - "crn:v1:bluemix:public:iam::::role:Viewer"
        attributes:
          - name: "resourceType"
            value: "resource-group"
  secretRef:
    namespace: openshift-cluster-api
    name: capi-ibmcloud-manager-bootstrap-credentials
